
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/storables.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_storables.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_storables.py:


Defining Storables
========================

This example describes ways in which one can define storable objects.

.. GENERATED FROM PYTHON SOURCE LINES 9-21

Sometimes it is not feasible to serialize an object. For example large 
arrays in ``numpy``. The ``dman`` framework supports such objects 
through ``storables``. These should interface with the ``read`` and ``write``
methods as follows

.. code-block:: python

      import dman
      dman.write(obj, 'obj.out')
      assert(obj == dman.read(type(obj), 'obj.out'))

No standard objects are storable. They should be defined by the user:

.. GENERATED FROM PYTHON SOURCE LINES 21-39

.. code-block:: default


    import dman
    import numpy as np

    @dman.storable(name="_num__barray")
    class barray(np.ndarray):
        __ext__ = ".npy"

        def __write__(self, path):
            with open(path, "wb") as f:
                np.save(f, self)

        @classmethod
        def __read__(cls, path):
            with open(path, "rb") as f:
                res: np.ndarray = np.load(f)
                return res.view(cls)








.. GENERATED FROM PYTHON SOURCE LINES 40-42

The ``barray`` class is also provided in ``dman.numeric`` which can 
be imported when ``numpy`` is installed. We can use it as follows:

.. GENERATED FROM PYTHON SOURCE LINES 42-47

.. code-block:: default


    dman.write(np.eye(3).view(barray), 'array.npy')
    array = dman.read(barray, 'array.npy')
    print(array)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [[1. 0. 0.]
     [0. 1. 0.]
     [0. 0. 1.]]




.. GENERATED FROM PYTHON SOURCE LINES 48-64

.. warning::

    Again, the specified name should be unique for all storables.
    It can be the same as a name of a serializable object. A name can 
    also be automatically generated similar to ``serializable`` when it is left unspecified.
    The name can be used instead of the type when reading, which is used by the 
    more complex objects in ``dman``. 

    .. code-block:: python

        dman.read('_num__barray', 'array.npy')

It is also possible to automatically produce storables from 
dataclasses or serializable objects. With both json is used to 
store the object, however with a dataclass we use the default ``asdict``
method to convert it to a dictionary, which only works for certain types of fields.

.. GENERATED FROM PYTHON SOURCE LINES 64-79

.. code-block:: default



    from dataclasses import dataclass

    @dman.storable(name='manual')
    @dataclass
    class DCLBasic:
        value: str

    @dman.storable(name='manual')
    @dman.serializable(name='manual')
    @dataclass
    class SerBasic:
        value: str








.. GENERATED FROM PYTHON SOURCE LINES 80-81

Both types result in the same ``json`` file:

.. GENERATED FROM PYTHON SOURCE LINES 81-86

.. code-block:: default

    dman.write(DCLBasic(value='hello world!'), 'dcl.json')
    with open('dcl.json', 'r') as f:
        print(f.read())






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    {
        "value": "hello world!"
    }




.. GENERATED FROM PYTHON SOURCE LINES 87-93

.. note::

    It is not recommended to create storables from dataclasses as above. 
    Instead one should use the more powerful ``modelclass`` decorator
    with ``storable=True`` TODO add reference. The reason is that ``modelclass`` supports 
    storables as fields, where this method does not. 


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_gallery_storables.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: storables.py <storables.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: storables.ipynb <storables.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
